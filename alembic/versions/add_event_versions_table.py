"""add event versions table

Revision ID: add_event_versions_table
Revises: add_sync_states_table
Create Date: 2024-03-21 11:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'add_event_versions_table'
down_revision: Union[str, None] = 'add_sync_states_table'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'event_versions',
        sa.Column('id', sa.String(), primary_key=True),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('event_id', sa.String(), sa.ForeignKey('events.id'), nullable=False, index=True),
        sa.Column('version', sa.Integer(), nullable=False),
        sa.Column('created_by', sa.String(), sa.ForeignKey('user.id'), nullable=False),
        sa.Column('changes', sa.JSON(), nullable=False),
        sa.Column('comment', sa.String(), nullable=True),
        sa.UniqueConstraint('event_id', 'version', name='uix_event_version')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('event_versions')
    # ### end Alembic commands ### 